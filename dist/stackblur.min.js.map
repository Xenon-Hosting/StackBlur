{"version":3,"file":"stackblur.min.js","sources":["../src/stackblur.js"],"sourcesContent":["/* eslint-disable no-bitwise -- used for calculations */\n/* eslint-disable unicorn/prefer-query-selector -- aiming at\n  backward-compatibility */\n/**\n* StackBlur - a fast almost Gaussian Blur For Canvas\n*\n* In case you find this class useful - especially in commercial projects -\n* I am not totally unhappy for a small donation to my PayPal account\n* mario@quasimondo.de\n*\n* Or support me on flattr:\n* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.\n*\n* @module StackBlur\n* @author Mario Klingemann\n* Contact: mario@quasimondo.com\n* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}\n* Twitter: @quasimondo\n*\n* @copyright (c) 2010 Mario Klingemann\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nconst mulTable = [\n    512, 128, 114, 64, 82, 114, 335,\n    64, 405, 82, 271, 114, 97, 335,\n    73, 64, 227, 405, 91, 82, 149,\n    271, 124, 114, 105, 97, 90, 335,\n    78, 73, 273, 64, 241, 227, 107,\n    405, 383, 91, 345, 82, 78, 149,\n    71, 271, 259, 124, 475, 114,\n    437, 105, 101, 97, 187, 90, 347,\n    335, 323, 78, 151, 73, 141, 273,\n    265, 64, 497, 241, 117, 227,\n    441, 107, 417, 405, 197, 383,\n    373, 91, 177, 345, 337, 82, 80,\n    78, 305, 149, 291, 71, 139, 271,\n    265, 259, 507, 124, 485, 475,\n    465, 114, 223, 437, 107, 105,\n    103, 101, 99, 97, 381, 187, 367,\n    90, 177, 347, 341, 335, 329,\n    323, 159, 78, 307, 151, 297, 73,\n    287, 141, 139, 273, 269, 265,\n    261, 64, 505, 497, 489, 241,\n    475, 117, 461, 227, 447, 441,\n    435, 107, 211, 417, 411, 405,\n    399, 197, 389, 383, 189, 373,\n    92, 91, 359, 177, 175, 345, 341,\n    337, 83, 82, 81, 80, 79, 78,\n    309, 305, 301, 149, 147, 291,\n    287, 71, 281, 139, 137, 271, 67,\n    265, 131, 259, 257, 507, 501,\n    124, 491, 485, 120, 475, 235,\n    465, 115, 114, 451, 223, 221,\n    437, 433, 107, 106, 105, 104,\n    103, 102, 101, 100, 99, 98, 97,\n    385, 381, 377, 187, 185, 367,\n    363, 90, 357, 177, 175, 347, 86,\n    341, 169, 335, 83, 329, 163,\n    323, 80, 159, 315, 78, 155, 307,\n    76, 151, 299, 297, 147, 73, 289,\n    287, 285, 141, 70, 139, 275,\n    273, 271, 269, 267, 265, 263,\n    261, 259, 64, 509, 505, 501,\n    497, 493, 489, 243, 241, 239,\n    475, 471, 117, 116, 461, 457,\n    227, 451, 447, 111, 441, 219,\n    435, 108, 107, 425, 211, 419,\n    417, 207, 411, 102, 405, 201,\n    399, 397, 197, 391, 389, 193,\n    383, 381, 189, 94, 373, 371, 92,\n    183, 91, 361, 359, 357, 177, 88,\n    175, 347, 345, 343, 341, 339,\n    337, 167, 83, 165, 82, 163, 81,\n    161, 80, 159, 79, 157, 78, 155,\n    309, 307, 305, 303, 301, 299,\n    149, 74, 147, 73, 291, 289, 287,\n    143, 71, 141, 281, 279, 139, 69,\n    137, 273, 271, 135, 67, 267,\n    265, 66, 131, 261, 259, 129,\n    257, 255, 507, 126, 501, 499,\n    124, 493, 491, 122, 485, 483,\n    120, 239, 475, 473, 235, 117,\n    465, 463, 115, 229, 114, 453,\n    451, 449, 223, 111, 221, 439,\n    437, 435, 433, 431, 107, 213,\n    106, 211, 105, 209\n];\n\nconst shgTable = [\n    9, 9, 10, 10, 11, 12, 14, 12, 15, 13, 15, 14, 14, 16, 14, 14, 16,\n    17, 15, 15, 16, 17, 16, 16, 16, 16, 16, 18, 16, 16, 18, 16,\n    18, 18, 17, 19, 19, 17, 19, 17, 17, 18, 17, 19, 19, 18, 20,\n    18, 20, 18, 18, 18, 19, 18, 20, 20, 20, 18, 19, 18, 19, 20,\n    20, 18, 21, 20, 19, 20, 21, 19, 21, 21, 20, 21, 21, 19, 20,\n    21, 21, 19, 19, 19, 21, 20, 21, 19, 20, 21, 21, 21, 22, 20,\n    22, 22, 22, 20, 21, 22, 20, 20, 20, 20, 20, 20, 22, 21, 22,\n    20, 21, 22, 22, 22, 22, 22, 21, 20, 22, 21, 22, 20, 22, 21,\n    21, 22, 22, 22, 22, 20, 23, 23, 23, 22, 23, 21, 23, 22, 23,\n    23, 23, 21, 22, 23, 23, 23, 23, 22, 23, 23, 22, 23, 21, 21,\n    23, 22, 22, 23, 23, 23, 21, 21, 21, 21, 21, 21, 23, 23, 23,\n    22, 22, 23, 23, 21, 23, 22, 22, 23, 21, 23, 22, 23, 23, 24,\n    24, 22, 24, 24, 22, 24, 23, 24, 22, 22, 24, 23, 23, 24, 24,\n    22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 24, 24, 24, 23,\n    23, 24, 24, 22, 24, 23, 23, 24, 22, 24, 23, 24, 22, 24, 23,\n    24, 22, 23, 24, 22, 23, 24, 22, 23, 24, 24, 23, 22, 24, 24,\n    24, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 22, 25,\n    25, 25, 25, 25, 25, 24, 24, 24, 25, 25, 23, 23, 25, 25, 24,\n    25, 25, 23, 25, 24, 25, 23, 23, 25, 24, 25, 25, 24, 25, 23,\n    25, 24, 25, 25, 24, 25, 25, 24, 25, 25, 24, 23, 25, 25, 23,\n    24, 23, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 24,\n    23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 25, 25, 25,\n    25, 25, 25, 24, 23, 24, 23, 25, 25, 25, 24, 23, 24, 25, 25,\n    24, 23, 24, 25, 25, 24, 23, 25, 25, 23, 24, 25, 25, 24, 25,\n    25, 26, 24, 26, 26, 24, 26, 26, 24, 26, 26, 24, 25, 26, 26,\n    25, 24, 26, 26, 24, 25, 24, 26, 26, 26, 25, 24, 25, 26, 26,\n    26, 26, 26, 24, 25, 24, 25, 24, 25\n];\n\n/**\n * @param {string|HTMLImageElement} img\n * @param {string|HTMLCanvasElement} canvas\n * @param {Float} radius\n * @param {boolean} blurAlphaChannel\n * @param {boolean} useOffset\n * @param {boolean} skipStyles\n * @returns {undefined}\n */\nfunction processImage (\n  img, canvas, radius, blurAlphaChannel, useOffset, skipStyles\n) {\n  if (typeof img === 'string') {\n    img = document.getElementById(img);\n  }\n  if (!img || !('naturalWidth' in img)) {\n    return;\n  }\n\n  const dimensionType = useOffset ? 'offset' : 'natural';\n  const w = img[dimensionType + 'Width'];\n  const h = img[dimensionType + 'Height'];\n\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n  if (!canvas || !('getContext' in canvas)) {\n    return;\n  }\n\n  if (!skipStyles) {\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n  canvas.width = w;\n  canvas.height = h;\n\n  const context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, w, h);\n\n  if (isNaN(radius) || radius < 1) { return; }\n\n  if (blurAlphaChannel) {\n    processCanvasRGBA(canvas, 0, 0, w, h, radius);\n  } else {\n    processCanvasRGB(canvas, 0, 0, w, h, radius);\n  }\n}\n\n/**\n * @param {string|HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @throws {Error|TypeError}\n * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}\n */\nfunction getImageDataFromCanvas (canvas, topX, topY, width, height) {\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n  if (!canvas || typeof canvas !== 'object' || !('getContext' in canvas)) {\n    throw new TypeError(\n      'Expecting canvas with `getContext` method ' +\n            'in processCanvasRGB(A) calls!'\n    );\n  }\n\n  const context = canvas.getContext('2d');\n\n  try {\n    return context.getImageData(topX, topY, width, height);\n  } catch (e) {\n    throw new Error('unable to access image data: ' + e);\n  }\n}\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\nfunction processCanvasRGBA (canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) { return; }\n  radius |= 0;\n\n  let imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n\n  imageData = processImageDataRGBA(\n    imageData, topX, topY, width, height, radius\n  );\n\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\nfunction processImageDataRGBA (imageData, topX, topY, width, height, radius) {\n  const pixels = imageData.data;\n\n  const div = 2 * radius + 1;\n  // const w4 = width << 2;\n  const widthMinus1 = width - 1;\n  const heightMinus1 = height - 1;\n  const radiusPlus1 = radius + 1;\n  const sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n\n  const stackStart = new BlurStack();\n  let stack = stackStart;\n  let stackEnd;\n  for (let i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n  stack.next = stackStart;\n\n  let stackIn = null,\n    stackOut = null,\n    yw = 0,\n    yi = 0;\n\n  const mulSum = mulTable[radius];\n  const shgSum = shgTable[radius];\n\n  for (let y = 0; y < height; y++) {\n    stack = stackStart;\n\n    const pr = pixels[yi],\n      pg = pixels[yi + 1],\n      pb = pixels[yi + 2],\n      pa = pixels[yi + 3];\n\n    for (let i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    let rInSum = 0, gInSum = 0, bInSum = 0, aInSum = 0,\n      rOutSum = radiusPlus1 * pr,\n      gOutSum = radiusPlus1 * pg,\n      bOutSum = radiusPlus1 * pb,\n      aOutSum = radiusPlus1 * pa,\n      rSum = sumFactor * pr,\n      gSum = sumFactor * pg,\n      bSum = sumFactor * pb,\n      aSum = sumFactor * pa;\n\n    for (let i = 1; i < radiusPlus1; i++) {\n      const p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n\n      const r = pixels[p],\n        g = pixels[p + 1],\n        b = pixels[p + 2],\n        a = pixels[p + 3];\n\n      const rbs = radiusPlus1 - i;\n      rSum += (stack.r = r) * rbs;\n      gSum += (stack.g = g) * rbs;\n      bSum += (stack.b = b) * rbs;\n      aSum += (stack.a = a) * rbs;\n\n      rInSum += r;\n      gInSum += g;\n      bInSum += b;\n      aInSum += a;\n\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (let x = 0; x < width; x++) {\n      const paInitial = (aSum * mulSum) >> shgSum;\n      pixels[yi + 3] = paInitial;\n      if (paInitial !== 0) {\n        const a = 255 / paInitial;\n        pixels[yi] = ((rSum * mulSum) >> shgSum) * a;\n        pixels[yi + 1] = ((gSum * mulSum) >> shgSum) * a;\n        pixels[yi + 2] = ((bSum * mulSum) >> shgSum) * a;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n\n      let p = x + radius + 1;\n      p = (yw + (p < widthMinus1\n        ? p\n        : widthMinus1)) << 2;\n\n      rInSum += (stackIn.r = pixels[p]);\n      gInSum += (stackIn.g = pixels[p + 1]);\n      bInSum += (stackIn.b = pixels[p + 2]);\n      aInSum += (stackIn.a = pixels[p + 3]);\n\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      aSum += aInSum;\n\n      stackIn = stackIn.next;\n\n      const {r, g, b, a} = stackOut;\n\n      rOutSum += r;\n      gOutSum += g;\n      bOutSum += b;\n      aOutSum += a;\n\n      rInSum -= r;\n      gInSum -= g;\n      bInSum -= b;\n      aInSum -= a;\n\n      stackOut = stackOut.next;\n\n      yi += 4;\n    }\n    yw += width;\n  }\n\n  for (let x = 0; x < width; x++) {\n    yi = x << 2;\n\n    let pr = pixels[yi],\n      pg = pixels[yi + 1],\n      pb = pixels[yi + 2],\n      pa = pixels[yi + 3],\n      rOutSum = radiusPlus1 * pr,\n      gOutSum = radiusPlus1 * pg,\n      bOutSum = radiusPlus1 * pb,\n      aOutSum = radiusPlus1 * pa,\n      rSum = sumFactor * pr,\n      gSum = sumFactor * pg,\n      bSum = sumFactor * pb,\n      aSum = sumFactor * pa;\n\n    stack = stackStart;\n\n    for (let i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    let yp = width;\n\n    let gInSum = 0, bInSum = 0, aInSum = 0, rInSum = 0;\n    for (let i = 1; i <= radius; i++) {\n      yi = (yp + x) << 2;\n\n      const rbs = radiusPlus1 - i;\n      rSum += (stack.r = (pr = pixels[yi])) * rbs;\n      gSum += (stack.g = (pg = pixels[yi + 1])) * rbs;\n      bSum += (stack.b = (pb = pixels[yi + 2])) * rbs;\n      aSum += (stack.a = (pa = pixels[yi + 3])) * rbs;\n\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      aInSum += pa;\n\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (let y = 0; y < height; y++) {\n      let p = yi << 2;\n      pixels[p + 3] = pa = (aSum * mulSum) >> shgSum;\n      if (pa > 0) {\n        pa = 255 / pa;\n        pixels[p] = ((rSum * mulSum) >> shgSum) * pa;\n        pixels[p + 1] = ((gSum * mulSum) >> shgSum) * pa;\n        pixels[p + 2] = ((bSum * mulSum) >> shgSum) * pa;\n      } else {\n        pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n\n      p = (x + (\n        ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) *\n                width\n      )) << 2;\n\n      rSum += (rInSum += (stackIn.r = pixels[p]));\n      gSum += (gInSum += (stackIn.g = pixels[p + 1]));\n      bSum += (bInSum += (stackIn.b = pixels[p + 2]));\n      aSum += (aInSum += (stackIn.a = pixels[p + 3]));\n\n      stackIn = stackIn.next;\n\n      rOutSum += (pr = stackOut.r);\n      gOutSum += (pg = stackOut.g);\n      bOutSum += (pb = stackOut.b);\n      aOutSum += (pa = stackOut.a);\n\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      aInSum -= pa;\n\n      stackOut = stackOut.next;\n\n      yi += width;\n    }\n  }\n  return imageData;\n}\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\nfunction processCanvasRGB (canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) { return; }\n  radius |= 0;\n\n  let imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGB(\n    imageData, topX, topY, width, height, radius\n  );\n\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\nfunction processImageDataRGB (imageData, topX, topY, width, height, radius) {\n  const pixels = imageData.data;\n\n  const div = 2 * radius + 1;\n  // const w4 = width << 2;\n  const widthMinus1 = width - 1;\n  const heightMinus1 = height - 1;\n  const radiusPlus1 = radius + 1;\n  const sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n\n  const stackStart = new BlurStack();\n  let stack = stackStart;\n  let stackEnd;\n  for (let i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n  stack.next = stackStart;\n  let stackIn = null;\n  let stackOut = null;\n\n  const mulSum = mulTable[radius];\n  const shgSum = shgTable[radius];\n\n  let p, rbs;\n  let yw = 0, yi = 0;\n\n  for (let y = 0; y < height; y++) {\n    let pr = pixels[yi],\n      pg = pixels[yi + 1],\n      pb = pixels[yi + 2],\n      rOutSum = radiusPlus1 * pr,\n      gOutSum = radiusPlus1 * pg,\n      bOutSum = radiusPlus1 * pb,\n      rSum = sumFactor * pr,\n      gSum = sumFactor * pg,\n      bSum = sumFactor * pb;\n\n    stack = stackStart;\n\n    for (let i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    let rInSum = 0, gInSum = 0, bInSum = 0;\n    for (let i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      rSum += (stack.r = (pr = pixels[p])) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = (pg = pixels[p + 1])) * rbs;\n      bSum += (stack.b = (pb = pixels[p + 2])) * rbs;\n\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (let x = 0; x < width; x++) {\n      pixels[yi] = (rSum * mulSum) >> shgSum;\n      pixels[yi + 1] = (gSum * mulSum) >> shgSum;\n      pixels[yi + 2] = (bSum * mulSum) >> shgSum;\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n\n      p = (yw + (\n        (p = x + radius + 1) < widthMinus1 ? p : widthMinus1\n      )) << 2;\n\n      rInSum += (stackIn.r = pixels[p]);\n      gInSum += (stackIn.g = pixels[p + 1]);\n      bInSum += (stackIn.b = pixels[p + 2]);\n\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n\n      stackIn = stackIn.next;\n\n      rOutSum += (pr = stackOut.r);\n      gOutSum += (pg = stackOut.g);\n      bOutSum += (pb = stackOut.b);\n\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n\n      stackOut = stackOut.next;\n\n      yi += 4;\n    }\n    yw += width;\n  }\n\n  for (let x = 0; x < width; x++) {\n    yi = x << 2;\n    let pr = pixels[yi],\n      pg = pixels[yi + 1],\n      pb = pixels[yi + 2],\n      rOutSum = radiusPlus1 * pr,\n      gOutSum = radiusPlus1 * pg,\n      bOutSum = radiusPlus1 * pb,\n      rSum = sumFactor * pr,\n      gSum = sumFactor * pg,\n      bSum = sumFactor * pb;\n\n    stack = stackStart;\n\n    for (let i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    let rInSum = 0, gInSum = 0, bInSum = 0;\n    for (let i = 1, yp = width; i <= radius; i++) {\n      yi = (yp + x) << 2;\n\n      rSum += (stack.r = (pr = pixels[yi])) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = (pg = pixels[yi + 1])) * rbs;\n      bSum += (stack.b = (pb = pixels[yi + 2])) * rbs;\n\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (let y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p] = (rSum * mulSum) >> shgSum;\n      pixels[p + 1] = (gSum * mulSum) >> shgSum;\n      pixels[p + 2] = (bSum * mulSum) >> shgSum;\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n\n      p = (x + (\n        ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) *\n                width\n      )) << 2;\n\n      rSum += (rInSum += (stackIn.r = pixels[p]));\n      gSum += (gInSum += (stackIn.g = pixels[p + 1]));\n      bSum += (bInSum += (stackIn.b = pixels[p + 2]));\n\n      stackIn = stackIn.next;\n\n      rOutSum += (pr = stackOut.r);\n      gOutSum += (pg = stackOut.g);\n      bOutSum += (pb = stackOut.b);\n\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n\n      stackOut = stackOut.next;\n\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n\n/**\n *\n */\nexport class BlurStack {\n  /**\n   * Set properties.\n   */\n  constructor () {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n  }\n}\n\nexport {\n  /**\n    * @function module:StackBlur.image\n    * @see module:StackBlur~processImage\n    */\n  processImage as image,\n  /**\n    * @function module:StackBlur.canvasRGBA\n    * @see module:StackBlur~processCanvasRGBA\n    */\n  processCanvasRGBA as canvasRGBA,\n  /**\n    * @function module:StackBlur.canvasRGB\n    * @see module:StackBlur~processCanvasRGB\n    */\n  processCanvasRGB as canvasRGB,\n  /**\n    * @function module:StackBlur.imageDataRGBA\n    * @see module:StackBlur~processImageDataRGBA\n    */\n  processImageDataRGBA as imageDataRGBA,\n  /**\n    * @function module:StackBlur.imageDataRGB\n    * @see module:StackBlur~processImageDataRGB\n    */\n  processImageDataRGB as imageDataRGB\n};\n"],"names":["mulTable","shgTable","getImageDataFromCanvas","canvas","topX","topY","width","height","document","getElementById","_typeof","TypeError","context","getContext","getImageData","e","Error","processCanvasRGBA","radius","isNaN","imageData","processImageDataRGBA","putImageData","stackEnd","pixels","data","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stack","i","next","stackIn","stackOut","yw","yi","mulSum","shgSum","y","pr","pg","pb","pa","r","g","b","a","rInSum","gInSum","bInSum","aInSum","rOutSum","gOutSum","bOutSum","aOutSum","rSum","gSum","bSum","aSum","p","rbs","x","paInitial","_stackOut","yp","processCanvasRGB","processImageDataRGB","_createClass","_classCallCheck","this","img","blurAlphaChannel","useOffset","skipStyles","dimensionType","w","h","style","clearRect","drawImage","naturalWidth","naturalHeight"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iHA2CA,IAAMA,EAAW,CACb,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAC5B,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAC3B,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAC1B,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAC5B,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAC3B,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAC3B,GAAI,IAAK,IAAK,IAAK,IAAK,IACxB,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAC5B,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAC5B,IAAK,GAAI,IAAK,IAAK,IAAK,IACxB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAC5B,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAC5B,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAC5B,GAAI,IAAK,IAAK,IAAK,IAAK,IACxB,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAC7B,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,GAAI,IAAK,IAAK,IAAK,IACxB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAC5B,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAC7B,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAC5B,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAC7B,IAAK,IAAK,IAAK,GAAI,IAAK,IACxB,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAC5B,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAC5B,IAAK,IAAK,IAAK,GAAI,IAAK,IACxB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,GAAI,IAAK,IAAK,IACxB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAC7B,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAC7B,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAC5B,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAC5B,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAC7B,IAAK,IAAK,IAAK,IAAK,GAAI,IACxB,IAAK,GAAI,IAAK,IAAK,IAAK,IACxB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,KAGbC,EAAW,CACb,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC9D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,GAAI,G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"}